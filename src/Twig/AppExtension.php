<?php
/**
 * AppExtension.php
 * Created by nicolas for MyWebsite
 * Developed and maintained using PhpStorm
 * Started on fÃ©vr. 02, 2020 at 21:57:56
 */

namespace App\Twig;

use Symfony\Component\Intl\Locales;
use Twig\Extension\AbstractExtension;
use Twig\TwigFilter;
use Twig\TwigFunction;

/**
 * Class AppExtension
 * @package App\Twig
 */
class AppExtension extends AbstractExtension
{
    /**
     * @var array
     */
    private $locales;

    /**
     * @var array
     */
    private $localeCodes;

    /**
     * AppExtension constructor.
     * @param string $locales
     */
    public function __construct(string $locales)
    {
        $localeCodes = explode('|', $locales);
        sort($localeCodes);
        $this->localeCodes = $localeCodes;
    }

    /**
     * Returns the list of filters.
     * @return array|TwigFilter[]
     */
    public function getFilters(): array
    {
        return parent::getFilters(); // TODO: Change the autogenerated stub
    }

    /**
     * Returns the list of functions.
     * @return array|TwigFunction[]
     */
    public function getFunctions(): array
    {
        return [
            new TwigFunction('locales', [$this, 'getLocales'])
        ];
    }

    /**
     * Returns the list of available languages.
     * @return array
     */
    public function getLocales(): array
    {
        if ($this->locales != null)
            return $this->locales;
        $this->locales = [];
        foreach ($this->localeCodes as $localeCode) {
            $this->locales[] = ['code' => $localeCode, 'name' => Locales::getName($localeCode, $localeCode)];
        }
        return $this->locales;
    }
}
